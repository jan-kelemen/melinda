name: Sanitizers

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  clang-asan-leak-undefined:
    runs-on: ubuntu-22.04
    
    env:
      CLANG_VER: 17
      
    strategy:
      fail-fast: false
        
    steps:
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install clang-tidy-${{ env.CLANG_VER }}
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          . /etc/lsb-release
          sudo add-apt-repository -y "deb http://apt.llvm.org/${DISTRIB_CODENAME}/ llvm-toolchain-${DISTRIB_CODENAME}-${{ env.CLANG_VER }} main"
          sudo apt-get install -y clang-${{ env.CLANG_VER }} llvm-${{ env.CLANG_VER }} clang-tidy-${{ env.CLANG_VER }}

          echo "CONAN_PROFILE=clang-${{ env.CLANG_VER }}" >> $GITHUB_ENV
              
      - name: Install Conan
        uses: turtlebrowser/get-conan@v1.2
        with:
          version: 2.0.17

      - name: Fetch dependencies
        run: |
          conan profile detect --force
          conan install . --profile=conan/${{ env.CONAN_PROFILE }} --profile=conan/opt/linux-address-sanitizer --profile=conan/opt/linux-leak-sanitizer --profile=conan/opt/linux-undefined-sanitizer --build=* --settings build_type=Release

      - name: Configure CMake
        run: |
          cmake --preset conan-release

      - name: Build
        run: |
          cmake --build --preset=conan-release

      - name: Test
        run: |
          ctest --preset conan-release || ctest --preset conan-release --rerun-failed --output-on-failure

  gcc-tsan:
    runs-on: ubuntu-22.04
    
    env:
      GCC_VER: 13
      
    strategy:
      fail-fast: false
        
    steps:
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install gcc-${{ env.GCC_VER }}
        run: |
          sudo apt-get install -y gcc-${{ env.GCC_VER }} g++-${{ env.GCC_VER }}

          echo "CONAN_PROFILE=gcc-${{ env.GCC_VER }}" >> $GITHUB_ENV
              
      - name: Install Conan
        uses: turtlebrowser/get-conan@v1.2
        with:
          version: 2.0.17

      - name: Fetch dependencies
        run: |
          conan profile detect --force
          conan install . --profile=conan/${{ env.CONAN_PROFILE }} --profile=conan/opt/linux-thread-sanitizer --build=* --settings build_type=Release

      - name: Configure CMake
        run: |
          cmake --preset conan-release

      - name: Build
        run: |
          cmake --build --preset=conan-release

      - name: Test
        run: |
          ctest --preset conan-release || ctest --preset conan-release --rerun-failed --output-on-failure

  msvc-asan:
    runs-on: windows-2022

    env:
      CONAN_PROFILE: msvc-2022

    strategy:
      fail-fast: false

    steps:
      - name: Initialize
        run: |
          git config --global core.autocrlf input
          
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install Conan
        uses: turtlebrowser/get-conan@v1.2
        with:
          version: 2.0.17

      - name: Fetch dependencies
        run: |
          conan profile detect --force
          conan install . --profile=conan/${{ env.CONAN_PROFILE }} --profile=conan/opt/msvc-address-sanitizer --build=* --settings build_type=Release

      - name: Configure CMake
        run: |
          cmake --preset conan-default
          
      - name: Build
        run: |
          cmake --build --preset=conan-release

      - name: Test
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=amd64 -host_arch=amd64
          ctest --preset conan-release || ctest --preset conan-release --rerun-failed --output-on-failure
